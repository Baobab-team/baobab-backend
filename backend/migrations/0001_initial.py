# Generated by Django 3.1 on 2020-08-17 15:27

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slogan', models.CharField(max_length=150)),
                ('description', models.CharField(max_length=300)),
                ('website', models.URLField()),
                ('email', models.EmailField(max_length=254)),
                ('notes', models.CharField(max_length=300)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('refused', 'Refused')], max_length=150)),
                ('accepted_at', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=200, validators=[django.core.validators.RegexValidator(message="Format: '222 333 5555','222-333-5555','+1 222-333-5555'", regex='^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-](\\d{3})[\\s.-](\\d{4})$')])),
                ('type', models.CharField(choices=[('tel', 'Telephone'), ('fax', 'Fax')], max_length=25)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.business')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='business',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='backend.category'),
        ),
        migrations.AddField(
            model_name='business',
            name='tags',
            field=models.ManyToManyField(to='backend.Tag'),
        ),
        migrations.CreateModel(
            name='OpeningHours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')])),
                ('opening_time', models.TimeField(max_length=100)),
                ('closing_time', models.TimeField()),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.business')),
            ],
            options={
                'ordering': ('day', 'opening_time'),
                'unique_together': {('day', 'opening_time', 'opening_time')},
            },
        ),
    ]
